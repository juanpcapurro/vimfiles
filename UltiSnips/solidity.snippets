snippet icl "Import console.log"
import "forge-std/console.sol";
endsnippet

snippet cl "console.log"
console.log(${0:${VISUAL}});
endsnippet

snippet mapp "mapping (from => to) visibility name;"
mapping(${1} => ${2}) $0;
endsnippet

snippet func "function name(args) modifiers visibility  { body }"
function ${1}(${2}) $3 {$0}
endsnippet

snippet funct "function test_name(args) public  { body }"
function test_${1}(${2}) public {$0}
endsnippet

snippet funcs "setup function"
function setUp() public virtual override{
    super.setUp();
    $0
}
endsnippet

snippet for "for (...) {}"
for (uint256 ${1:i} = ${2:0}; $1 < ${3} ; $1++){${0}}
endsnippet

snippet contf "// SPDX \n pragma solidity \n contract..."
// SPDX-License-Identifier: GPL-3
pragma solidity ^0.8.21;

contract ${1} {$0}
endsnippet

snippet testf "// foundry test contract"
// SPDX-License-Identifier: GPL-3
pragma solidity ^0.8.21;
import {Test} from 'forge-std/Test.sol';

contract ${1} is Test ${2} {
    function setUp() public virtual {}
    $0
}
endsnippet

snippet con "contract definition"
contract ${1} {$0}
endsnippet
